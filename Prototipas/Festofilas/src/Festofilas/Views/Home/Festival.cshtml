@using Festofilas.Models.MainViewModels
@model Festofilas.Models.MainViewModels.FestivalViewModel
@{
    ViewData["Title"] = Model.Name;
    Layout = "_Layout";
    Context.Response.Headers["Content-Type"] = "charset=utf-8";
}

<h2>@Model.Name</h2>
<div class="row">
    <div class="col-md-4">
        <img class="img-responsive"
             src='@Model.DisplayImage' style="max-width: 350px; max-height: 350px"/>
    </div>
    <div class="col-md-8">
        <div class="h4">Tipas: @Model.Genre</div>
        <div class="h4">Data: @Model.Date.ToString("D")</div>
        <p>@Model.Summary</p>
        <div class="h4">
            Festivalio svetainė: <a href="http://@Model.Webpage">@Model.Webpage</a>.
            Festivalio facebook'as: <img onclick="window.open('http://@Model.Facebook')" src="../../images/fb.png" style="width: 25px; height: 25px"/>
        </div>
        <div class="col-md-6">
            <div class="h4">
                Kainos: @Model.LowestPrice € - @Model.HighestPrice €. <a href="http://@Model.TicketWebsite">Biletai</a>
            </div>
            <div class="h4">Adresas: @Model.PlainTextAddress</div>
            <div class="h3">Organizatoriaus kontakatai</div>
            <ul class="list-unstyled">
                @if (!string.IsNullOrEmpty(Model.FirstName))
                {
                    <li >Vardas: @Model.FirstName</li>
                }
                @if (!string.IsNullOrEmpty(Model.LastName))
                {
                    <li >Pavardė: @Model.LastName</li>
                }
                @if (!string.IsNullOrEmpty(Model.Email))
                {
                    <li >E-mail: @Model.Email</li>
                }
                @if (!string.IsNullOrEmpty(Model.PhoneNumber))
                {
                    <li >Telefonas: @Model.PhoneNumber</li>
                }

            </ul>
        </div>
        <div class="col-md-6">


            <div id="map" style="width: 200px; height: 200px; max-width: 100%; max-height: 100%;"></div>
        </div>

        <script>
            function myMap() {
                var mapCanvas = document.getElementById("map");
                var mapOptions = {
                    center: new google.maps.LatLng({ lat: @Model.Latitude, lng: @Model.Longitude }),
                    zoom: 13,
                    disableDefaultUI: true

                }
                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng({ lat: @Model.Latitude, lng: @Model.Longitude })
                });
                var map = new google.maps.Map(mapCanvas, mapOptions);
                map.setClickableIcons(false);
                marker.setMap(map);
            }
        </script>
    </div>
</div>
@if (User.Identity.IsAuthenticated)
{
    <button class="btn btn-default" onclick="window.location ='@Url.Action("EditFestival", "Home", new {id = Model.Id})'; ">Keisti festivalį</button>
}


<div>
    
    @await Component.InvokeAsync("Comment", new {articleId = Model.Id, isFestival = true, from = 0, to = 5})

    @if (User.Identity.IsAuthenticated)
    {
        @await Component.InvokeAsync("CommentPost", new {comment = new CommentPostModel() {ArticleId = Model.Id, IsFestival = true}})
    }
    <a asp-action="About">Atgal</a>
</div>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC8rHv1UfQ3MG9Abx9XKtMYv4rmuIIb7yg&callback=myMap"></script>